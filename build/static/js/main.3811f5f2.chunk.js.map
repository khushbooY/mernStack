{"version":3,"sources":["Compoents/List.js","Compoents/Form.js","Compoents/Form2.js","App.js","Compoents/item1.js","Compoents/item2.js","Compoents/draggable.js","Compoents/dropable.js","serviceWorker.js","index.js","logo.svg"],"names":["Component","Form","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","myData","Name","document","getElementById","value","password","axios","post","then","response","console","log","data","alert","catch","error","react_default","a","createElement","style","textAlign","width","marginLeft","border","id","onClick","submit","react_router_dom","to","Login","type","sendData","App","react_router","exact","path","Compoents_Form","Form2","DragSource","beginDrag","pieceId","connect","monitor","connectDragSource","dragSource","isDragging","_ref","height","backgroundColor","margin","opacity","fontSize","fontWeight","squareTarget","drop","DropTarget","connectDropTarget","dropTarget","isOver","padding","item1","item2","Boolean","window","location","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.3811f5f2.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nclass List extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n    render() {\r\n        var List = [1, 2, 3, 4, 5]\r\n        return (<div>\r\n            {List.map((index) => {\r\n                return <div>{index}</div>\r\n\r\n            })}\r\n        </div>);\r\n    }\r\n}\r\n\r\nexport default List;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\nimport { BrowserRouter, Route, Link } from \"react-router-dom\";\r\n\r\nclass Form extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n    submit() {\r\n        var Name = document.getElementById(\"Name\").value\r\n        var shopName = document.getElementById(\"shopName\").value;\r\n\r\n        var myData = {\r\n            \"Name\": Name,\r\n            \"password\": shopName,\r\n\r\n        }\r\n        // console.log(\"myDara\", myData, document.getElementById(\"Name\"), myData)\r\n\r\n\r\n\r\n\r\n        axios.post(\"/sign_up\", myData).then(function (response) {\r\n            console.log(\"response\", response.data);\r\n            alert(response.data)\r\n        })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n    render() {\r\n        return (<div style={{ textAlign: \"center\", width: \"50%\", marginLeft: \"25%\", border: \"2px solid black\" }}>\r\n            <h1>{\"SIGN UP\"}</h1><br></br><br></br>\r\n           Name: <input id=\"Name\"></input><br></br><br></br>\r\n           password <input id=\"shopName\"></input><br></br><br></br>\r\n\r\n            <button onClick={this.submit}>Submit</button><br></br><br></br>\r\n\r\n            <Link to=\"/login\">GO TO LOGIN IN</Link>\r\n        </div>);\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Form;","import React, { Component } from 'react';\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n    sendData() {\r\n\r\n        var Name = document.getElementById(\"name\").value\r\n        var password = document.getElementById(\"password\").value;\r\n        // var status = document.getElementById(\"status\").value;\r\n        var myData = {\r\n            \"Name\": Name,\r\n            \"password\": password,\r\n\r\n        }\r\n        // console.log(\"myDara\", myData, document.getElementById(\"Name\"), myData)\r\n        axios.post(\"/loginIn\", myData).then(function (response) {\r\n            console.log(response);\r\n            console.log(\"response\", response.data);\r\n            alert(response.data)\r\n        })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n\r\n\r\n    }\r\n    render() {\r\n        return (<div style={{ textAlign: \"center\", width: \"50%\", marginLeft: \"25%\", border: \"2px solid black\" }}>\r\n            <h1>LOGIN</h1><br></br><br></br>\r\n            Name:      <input id=\"name\"></input><br></br><br></br>\r\n            password<input type=\"password\" id=\"password\"></input><br></br><br></br>\r\n            <button onClick={this.sendData}>Submit</button><br></br><br></br>\r\n\r\n            <Link to=\"/\">GO TO SIGN UP</Link>\r\n\r\n        </div>);\r\n    }\r\n}\r\n\r\nexport default Login;","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport List from '../src/Compoents/List'\nimport Form from '../src/Compoents/Form'\nimport Form2 from '../src/Compoents/Form2'\n\nimport { BrowserRouter, Route, Link } from \"react-router-dom\";\n\n\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      {/* <List></List> */}\n      <Route exact path=\"/\">   <Form></Form></Route>\n      <Route path=\"/login\">   <Form2></Form2></Route>\n\n\n\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React, { Component } from \"react\";\r\nimport { ItemTypes } from \"./constant\";\r\n\r\nimport { DragSource } from \"react-dnd\";\r\n\r\nconst knightSource = {\r\n  beginDrag(props) {\r\n    return {\r\n      pieceId: props.id\r\n    };\r\n  }\r\n};\r\n\r\nfunction collect(connect, monitor) {\r\n  return {\r\n    connectDragSource: connect.dragSource(),\r\n    isDragging: monitor.isDragging()\r\n  };\r\n}\r\n\r\nfunction Item1({ connectDragSource, isDragging }) {\r\n  return connectDragSource(\r\n    <div\r\n      style={{\r\n        width: \"100%\",\r\n        height: \"20%\",\r\n        backgroundColor: \"white\",\r\n        border: \"1px solid black\",\r\n        margin: \"2px\",\r\n        opacity: isDragging ? 0.5 : 1,\r\n        fontSize: 25,\r\n        fontWeight: \"bold\"\r\n      }}\r\n    >\r\n      Hello\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DragSource(\"data\", knightSource, collect)(Item1);\r\n","import React, { Component } from \"react\";\r\nimport { ItemTypes } from \"./constant\";\r\n\r\nimport { DragSource } from \"react-dnd\";\r\n\r\nconst knightSource = {\r\n  beginDrag(props) {\r\n    return {\r\n      pieceId: props.id\r\n    };\r\n  }\r\n};\r\n\r\nfunction collect(connect, monitor) {\r\n  return {\r\n    connectDragSource: connect.dragSource(),\r\n    isDragging: monitor.isDragging()\r\n  };\r\n}\r\n\r\nfunction Item2({ connectDragSource, isDragging }) {\r\n  return connectDragSource(\r\n    <div\r\n      style={{\r\n        width: \"100%\",\r\n        height: \"20%\",\r\n        backgroundColor: \"white\",\r\n        border: \"1px solid black\",\r\n        margin: \"2px\",\r\n        opacity: isDragging ? 0.5 : 1,\r\n        fontSize: 25,\r\n        fontWeight: \"bold\"\r\n      }}\r\n    >\r\n      Hye\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DragSource(\"data\", knightSource, collect)(Item2);\r\n","import { ItemTypes } from \"./constant\";\r\nimport Item1 from \"./item1\";\r\nimport Item2 from \"./item2\";\r\n\r\nimport React, { Component } from \"react\";\r\nimport { DropTarget } from \"react-dnd\";\r\nconst squareTarget = {\r\n  drop(props) {\r\n    console.log(\"DONE\");\r\n  }\r\n};\r\n\r\nfunction collect(connect, monitor) {\r\n  return {\r\n    connectDropTarget: connect.dropTarget(),\r\n    isOver: monitor.isOver()\r\n  };\r\n}\r\nfunction _({ connectDropTarget }) {\r\n  return connectDropTarget(\r\n    <div\r\n      style={{\r\n        width: \"500px\",\r\n        height: \"400px\",\r\n        border: \"1px solid black\",\r\n        backgroundColor: \"grey\",\r\n        padding: \"7px\"\r\n      }}\r\n    >\r\n      <Item1 />\r\n      <Item2 />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DropTarget(\"data\", squareTarget, collect)(_);\r\n","import React, { Component } from \"react\";\r\nimport { DropTarget } from \"react-dnd\";\r\n\r\nimport { ItemTypes } from \"./constant\";\r\n\r\nconst squareTarget = {\r\n  drop(props) {\r\n    console.log(\"DONE\");\r\n  }\r\n};\r\n\r\nfunction collect(connect, monitor) {\r\n  return {\r\n    connectDropTarget: connect.dropTarget(),\r\n    isOver: monitor.isOver()\r\n  };\r\n}\r\nfunction Dropw({ connectDropTarget }) {\r\n  return connectDropTarget(\r\n    <div\r\n      style={{\r\n        width: \"500px\",\r\n        height: \"400px\",\r\n        border: \"1px solid black\",\r\n        backgroundColor: \"grey\",\r\n        padding: \"7px\"\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nexport default DropTarget(\"data\", squareTarget, collect)(Dropw);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport _ from \"./Compoents/draggable\";\nimport Dropw from \"./Compoents/dropable\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}